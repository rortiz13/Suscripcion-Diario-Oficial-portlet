/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package la.netco.generated.model.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import la.netco.generated.model.model.Suscripcion;
import la.netco.generated.model.model.SuscripcionModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Suscripcion service. Represents a row in the &quot;suscripcion_Suscripcion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link la.netco.generated.model.model.SuscripcionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SuscripcionImpl}.
 * </p>
 *
 * @author smontanez
 * @see SuscripcionImpl
 * @see la.netco.generated.model.model.Suscripcion
 * @see la.netco.generated.model.model.SuscripcionModel
 * @generated
 */
public class SuscripcionModelImpl extends BaseModelImpl<Suscripcion>
	implements SuscripcionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a suscripcion model instance should use the {@link la.netco.generated.model.model.Suscripcion} interface instead.
	 */
	public static final String TABLE_NAME = "suscripcion_Suscripcion";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_suscripcion", Types.INTEGER },
			{ "nombres", Types.VARCHAR },
			{ "id_tipo_doc", Types.INTEGER },
			{ "num_documento", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "direccion", Types.VARCHAR },
			{ "telefono", Types.VARCHAR },
			{ "id_ciudad", Types.INTEGER },
			{ "nombres_contacto", Types.VARCHAR },
			{ "telefono_contacto", Types.VARCHAR },
			{ "medio", Types.VARCHAR },
			{ "tipo", Types.VARCHAR },
			{ "estado_pago", Types.VARCHAR },
			{ "valor_pagado", Types.VARCHAR },
			{ "tipo_persona", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table suscripcion_Suscripcion (id_suscripcion INTEGER not null primary key,nombres VARCHAR(75) null,id_tipo_doc INTEGER,num_documento VARCHAR(75) null,email VARCHAR(75) null,direccion VARCHAR(75) null,telefono VARCHAR(75) null,id_ciudad INTEGER,nombres_contacto VARCHAR(75) null,telefono_contacto VARCHAR(75) null,medio VARCHAR(75) null,tipo VARCHAR(75) null,estado_pago VARCHAR(75) null,valor_pagado VARCHAR(75) null,tipo_persona INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table suscripcion_Suscripcion";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.la.netco.generated.model.model.Suscripcion"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.la.netco.generated.model.model.Suscripcion"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.la.netco.generated.model.model.Suscripcion"),
			true);
	public static long NUM_DOCUMENTO_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.la.netco.generated.model.model.Suscripcion"));

	public SuscripcionModelImpl() {
	}

	public int getPrimaryKey() {
		return _id_suscripcion;
	}

	public void setPrimaryKey(int primaryKey) {
		setId_suscripcion(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Integer(_id_suscripcion);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	public Class<?> getModelClass() {
		return Suscripcion.class;
	}

	public String getModelClassName() {
		return Suscripcion.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_suscripcion", getId_suscripcion());
		attributes.put("nombres", getNombres());
		attributes.put("id_tipo_doc", getId_tipo_doc());
		attributes.put("num_documento", getNum_documento());
		attributes.put("email", getEmail());
		attributes.put("direccion", getDireccion());
		attributes.put("telefono", getTelefono());
		attributes.put("id_ciudad", getId_ciudad());
		attributes.put("nombres_contacto", getNombres_contacto());
		attributes.put("telefono_contacto", getTelefono_contacto());
		attributes.put("medio", getMedio());
		attributes.put("tipo", getTipo());
		attributes.put("estado_pago", getEstado_pago());
		attributes.put("valor_pagado", getValor_pagado());
		attributes.put("tipo_persona", getTipo_persona());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer id_suscripcion = (Integer)attributes.get("id_suscripcion");

		if (id_suscripcion != null) {
			setId_suscripcion(id_suscripcion);
		}

		String nombres = (String)attributes.get("nombres");

		if (nombres != null) {
			setNombres(nombres);
		}

		Integer id_tipo_doc = (Integer)attributes.get("id_tipo_doc");

		if (id_tipo_doc != null) {
			setId_tipo_doc(id_tipo_doc);
		}

		String num_documento = (String)attributes.get("num_documento");

		if (num_documento != null) {
			setNum_documento(num_documento);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String direccion = (String)attributes.get("direccion");

		if (direccion != null) {
			setDireccion(direccion);
		}

		String telefono = (String)attributes.get("telefono");

		if (telefono != null) {
			setTelefono(telefono);
		}

		Integer id_ciudad = (Integer)attributes.get("id_ciudad");

		if (id_ciudad != null) {
			setId_ciudad(id_ciudad);
		}

		String nombres_contacto = (String)attributes.get("nombres_contacto");

		if (nombres_contacto != null) {
			setNombres_contacto(nombres_contacto);
		}

		String telefono_contacto = (String)attributes.get("telefono_contacto");

		if (telefono_contacto != null) {
			setTelefono_contacto(telefono_contacto);
		}

		String medio = (String)attributes.get("medio");

		if (medio != null) {
			setMedio(medio);
		}

		String tipo = (String)attributes.get("tipo");

		if (tipo != null) {
			setTipo(tipo);
		}

		String estado_pago = (String)attributes.get("estado_pago");

		if (estado_pago != null) {
			setEstado_pago(estado_pago);
		}

		String valor_pagado = (String)attributes.get("valor_pagado");

		if (valor_pagado != null) {
			setValor_pagado(valor_pagado);
		}

		Integer tipo_persona = (Integer)attributes.get("tipo_persona");

		if (tipo_persona != null) {
			setTipo_persona(tipo_persona);
		}
	}

	public int getId_suscripcion() {
		return _id_suscripcion;
	}

	public void setId_suscripcion(int id_suscripcion) {
		_id_suscripcion = id_suscripcion;
	}

	public String getNombres() {
		if (_nombres == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombres;
		}
	}

	public void setNombres(String nombres) {
		_nombres = nombres;
	}

	public int getId_tipo_doc() {
		return _id_tipo_doc;
	}

	public void setId_tipo_doc(int id_tipo_doc) {
		_id_tipo_doc = id_tipo_doc;
	}

	public String getNum_documento() {
		if (_num_documento == null) {
			return StringPool.BLANK;
		}
		else {
			return _num_documento;
		}
	}

	public void setNum_documento(String num_documento) {
		_columnBitmask |= NUM_DOCUMENTO_COLUMN_BITMASK;

		if (_originalNum_documento == null) {
			_originalNum_documento = _num_documento;
		}

		_num_documento = num_documento;
	}

	public String getOriginalNum_documento() {
		return GetterUtil.getString(_originalNum_documento);
	}

	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	public void setEmail(String email) {
		_email = email;
	}

	public String getDireccion() {
		if (_direccion == null) {
			return StringPool.BLANK;
		}
		else {
			return _direccion;
		}
	}

	public void setDireccion(String direccion) {
		_direccion = direccion;
	}

	public String getTelefono() {
		if (_telefono == null) {
			return StringPool.BLANK;
		}
		else {
			return _telefono;
		}
	}

	public void setTelefono(String telefono) {
		_telefono = telefono;
	}

	public int getId_ciudad() {
		return _id_ciudad;
	}

	public void setId_ciudad(int id_ciudad) {
		_id_ciudad = id_ciudad;
	}

	public String getNombres_contacto() {
		if (_nombres_contacto == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombres_contacto;
		}
	}

	public void setNombres_contacto(String nombres_contacto) {
		_nombres_contacto = nombres_contacto;
	}

	public String getTelefono_contacto() {
		if (_telefono_contacto == null) {
			return StringPool.BLANK;
		}
		else {
			return _telefono_contacto;
		}
	}

	public void setTelefono_contacto(String telefono_contacto) {
		_telefono_contacto = telefono_contacto;
	}

	public String getMedio() {
		if (_medio == null) {
			return StringPool.BLANK;
		}
		else {
			return _medio;
		}
	}

	public void setMedio(String medio) {
		_medio = medio;
	}

	public String getTipo() {
		if (_tipo == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipo;
		}
	}

	public void setTipo(String tipo) {
		_tipo = tipo;
	}

	public String getEstado_pago() {
		return _estado_pago;
	}

	public void setEstado_pago(String estado_pago) {
		_estado_pago = estado_pago;
	}

	public String getValor_pagado() {
		return _valor_pagado;
	}

	public void setValor_pagado(String valor_pagado) {
		_valor_pagado = valor_pagado;
	}

	public int getTipo_persona() {
		return _tipo_persona;
	}

	public void setTipo_persona(int tipo_persona) {
		_tipo_persona = tipo_persona;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Suscripcion toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Suscripcion)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		SuscripcionImpl suscripcionImpl = new SuscripcionImpl();

		suscripcionImpl.setId_suscripcion(getId_suscripcion());
		suscripcionImpl.setNombres(getNombres());
		suscripcionImpl.setId_tipo_doc(getId_tipo_doc());
		suscripcionImpl.setNum_documento(getNum_documento());
		suscripcionImpl.setEmail(getEmail());
		suscripcionImpl.setDireccion(getDireccion());
		suscripcionImpl.setTelefono(getTelefono());
		suscripcionImpl.setId_ciudad(getId_ciudad());
		suscripcionImpl.setNombres_contacto(getNombres_contacto());
		suscripcionImpl.setTelefono_contacto(getTelefono_contacto());
		suscripcionImpl.setMedio(getMedio());
		suscripcionImpl.setTipo(getTipo());
		suscripcionImpl.setEstado_pago(getEstado_pago());
		suscripcionImpl.setValor_pagado(getValor_pagado());
		suscripcionImpl.setTipo_persona(getTipo_persona());

		suscripcionImpl.resetOriginalValues();

		return suscripcionImpl;
	}

	public int compareTo(Suscripcion suscripcion) {
		int primaryKey = suscripcion.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Suscripcion suscripcion = null;

		try {
			suscripcion = (Suscripcion)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		int primaryKey = suscripcion.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SuscripcionModelImpl suscripcionModelImpl = this;

		suscripcionModelImpl._originalNum_documento = suscripcionModelImpl._num_documento;

		suscripcionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Suscripcion> toCacheModel() {
		SuscripcionCacheModel suscripcionCacheModel = new SuscripcionCacheModel();

		suscripcionCacheModel.id_suscripcion = getId_suscripcion();

		suscripcionCacheModel.nombres = getNombres();

		String nombres = suscripcionCacheModel.nombres;

		if ((nombres != null) && (nombres.length() == 0)) {
			suscripcionCacheModel.nombres = null;
		}

		suscripcionCacheModel.id_tipo_doc = getId_tipo_doc();

		suscripcionCacheModel.num_documento = getNum_documento();

		String num_documento = suscripcionCacheModel.num_documento;

		if ((num_documento != null) && (num_documento.length() == 0)) {
			suscripcionCacheModel.num_documento = null;
		}

		suscripcionCacheModel.email = getEmail();

		String email = suscripcionCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			suscripcionCacheModel.email = null;
		}

		suscripcionCacheModel.direccion = getDireccion();

		String direccion = suscripcionCacheModel.direccion;

		if ((direccion != null) && (direccion.length() == 0)) {
			suscripcionCacheModel.direccion = null;
		}

		suscripcionCacheModel.telefono = getTelefono();

		String telefono = suscripcionCacheModel.telefono;

		if ((telefono != null) && (telefono.length() == 0)) {
			suscripcionCacheModel.telefono = null;
		}

		suscripcionCacheModel.id_ciudad = getId_ciudad();

		suscripcionCacheModel.nombres_contacto = getNombres_contacto();

		String nombres_contacto = suscripcionCacheModel.nombres_contacto;

		if ((nombres_contacto != null) && (nombres_contacto.length() == 0)) {
			suscripcionCacheModel.nombres_contacto = null;
		}

		suscripcionCacheModel.telefono_contacto = getTelefono_contacto();

		String telefono_contacto = suscripcionCacheModel.telefono_contacto;

		if ((telefono_contacto != null) && (telefono_contacto.length() == 0)) {
			suscripcionCacheModel.telefono_contacto = null;
		}

		suscripcionCacheModel.medio = getMedio();

		String medio = suscripcionCacheModel.medio;

		if ((medio != null) && (medio.length() == 0)) {
			suscripcionCacheModel.medio = null;
		}

		suscripcionCacheModel.tipo = getTipo();

		String tipo = suscripcionCacheModel.tipo;

		if ((tipo != null) && (tipo.length() == 0)) {
			suscripcionCacheModel.tipo = null;
		}

		suscripcionCacheModel.estado_pago = getEstado_pago();

		String estado_pago = suscripcionCacheModel.estado_pago;

		if ((estado_pago != null) && (estado_pago.length() == 0)) {
			suscripcionCacheModel.estado_pago = null;
		}

		suscripcionCacheModel.valor_pagado = getValor_pagado();

		String valor_pagado = suscripcionCacheModel.valor_pagado;

		if ((valor_pagado != null) && (valor_pagado.length() == 0)) {
			suscripcionCacheModel.valor_pagado = null;
		}

		suscripcionCacheModel.tipo_persona = getTipo_persona();

		return suscripcionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{id_suscripcion=");
		sb.append(getId_suscripcion());
		sb.append(", nombres=");
		sb.append(getNombres());
		sb.append(", id_tipo_doc=");
		sb.append(getId_tipo_doc());
		sb.append(", num_documento=");
		sb.append(getNum_documento());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", direccion=");
		sb.append(getDireccion());
		sb.append(", telefono=");
		sb.append(getTelefono());
		sb.append(", id_ciudad=");
		sb.append(getId_ciudad());
		sb.append(", nombres_contacto=");
		sb.append(getNombres_contacto());
		sb.append(", telefono_contacto=");
		sb.append(getTelefono_contacto());
		sb.append(", medio=");
		sb.append(getMedio());
		sb.append(", tipo=");
		sb.append(getTipo());
		sb.append(", estado_pago=");
		sb.append(getEstado_pago());
		sb.append(", valor_pagado=");
		sb.append(getValor_pagado());
		sb.append(", tipo_persona=");
		sb.append(getTipo_persona());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("la.netco.generated.model.model.Suscripcion");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_suscripcion</column-name><column-value><![CDATA[");
		sb.append(getId_suscripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombres</column-name><column-value><![CDATA[");
		sb.append(getNombres());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_tipo_doc</column-name><column-value><![CDATA[");
		sb.append(getId_tipo_doc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>num_documento</column-name><column-value><![CDATA[");
		sb.append(getNum_documento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>direccion</column-name><column-value><![CDATA[");
		sb.append(getDireccion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telefono</column-name><column-value><![CDATA[");
		sb.append(getTelefono());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_ciudad</column-name><column-value><![CDATA[");
		sb.append(getId_ciudad());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombres_contacto</column-name><column-value><![CDATA[");
		sb.append(getNombres_contacto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telefono_contacto</column-name><column-value><![CDATA[");
		sb.append(getTelefono_contacto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>medio</column-name><column-value><![CDATA[");
		sb.append(getMedio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipo</column-name><column-value><![CDATA[");
		sb.append(getTipo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado_pago</column-name><column-value><![CDATA[");
		sb.append(getEstado_pago());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valor_pagado</column-name><column-value><![CDATA[");
		sb.append(getValor_pagado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipo_persona</column-name><column-value><![CDATA[");
		sb.append(getTipo_persona());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Suscripcion.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Suscripcion.class
		};
	private int _id_suscripcion;
	private String _nombres;
	private int _id_tipo_doc;
	private String _num_documento;
	private String _originalNum_documento;
	private String _email;
	private String _direccion;
	private String _telefono;
	private int _id_ciudad;
	private String _nombres_contacto;
	private String _telefono_contacto;
	private String _medio;
	private String _tipo;
	private String _estado_pago;
	private String _valor_pagado;
	private int _tipo_persona;
	private long _columnBitmask;
	private Suscripcion _escapedModelProxy;
}